# All Traefik labels are documented at https://doc.traefik.io/traefik/v2.0/routing/providers/docker/
# Further documentation at https://doc.traefik.io/traefik/v2.0/providers/docker/

version: "3"
services:
  traefik:
    image: "library/traefik:v2.4"
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.traefik.address=:8600
      - --entrypoints.web-secure.address=:443
      - --providers.file.directory=/etc/traefik/config
      - --providers.docker
      - --providers.docker.exposedByDefault=false
      - --api.insecure
      - --accesslog=true
    ports:
      - "${WEB_PORT}:80"
      - "${WEBSECURE_PORT}:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/config:/etc/traefik/config"
      - "./certificates:/etc/certificates"
    networks:
      - web-external
      - web-internal
      - data-internal
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.service=api@internal
      - traefik.http.routers.api.entrypoints=web-secure
      - "traefik.http.routers.api.rule=Host(`localhost`) && PathPrefix(`/traefik/`) || (PathPrefix(`/api/`) && HeadersRegexp(`Referer`, `https://localhost/traefik/dashboard/*`))"
      - traefik.http.routers.api.tls=true
      - traefik.http.routers.api.middlewares=traefik-prefix-stripper
      - traefik.http.middlewares.traefik-prefix-stripper.stripprefix.prefixes=/traefik/

  nginx:
    build:
      dockerfile: dockerfiles/Dockerfile-nginx
      context: .
    networks:
      - web-external
      - web-internal
      - data-internal
    volumes:
      - nfsmount:/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.nginx.rule=Host(`localhost`)
      - traefik.http.routers.nginx-secure.rule=Host(`localhost`)
      - traefik.http.routers.nginx-secure.tls=true
      - traefik.http.services.nginx.loadbalancer.server.port=8080

  php-fpm: &php-fpm
    image: php-fpm
    network_mode: service:nginx
    build:
      dockerfile: dockerfiles/Dockerfile-php-fpm
      context: .
    volumes:
      - nfsmount:/data

  php-fpm-xdebug:
    <<: *php-fpm
    build:
      dockerfile: dockerfiles/Dockerfile-php-fpm-xdebug
      context: .
    environment:
      PHP_FPM_PORT: 9001
      PHP_IDE_CONFIG: "serverName=localhost"

  php-cli: &php-cli
    networks:
      - data-internal
      - web-internal
    build:
      dockerfile: dockerfiles/Dockerfile-php-cli
      context: .
    volumes:
      - nfsmount:/data
    environment:
      BASE_URI: "${BASE_URI}"

  php-cli-xdebug:
    <<: *php-cli
    build:
      dockerfile: dockerfiles/Dockerfile-php-cli-xdebug
      context: .
    environment:
      PHP_IDE_CONFIG: "serverName=localhost"

  db:
    image: mariadb
    networks:
      - data-internal
    environment:
      MYSQL_ROOT_PASSWORD: "local"
      MYSQL_DATABASE: "local"
      MYSQL_USER: "local"
      MYSQL_PASSWORD: "local"
    volumes:
      - ./sql/init:/docker-entrypoint-initdb.d

  redis:
    image: redis:5.0
    networks:
      - data-internal

  blackfire:
    image: blackfire/blackfire
    networks:
      - data-internal
    environment:
      BLACKFIRE_SERVER_ID: "${BLACKFIRE_SERVER_ID}"
      BLACKFIRE_SERVER_TOKEN: "${BLACKFIRE_SERVER_TOKEN}"

  selenium:
    image: selenium/standalone-chrome:3.141.59-oxygen
    networks:
      - data-internal

  mailhog:
    image: mailhog/mailhog
    networks:
      - web-external
    labels:
      - traefik.enable=true
      - traefik.http.routers.mailhog.entrypoints=web-secure
      - traefik.http.routers.mailhog.rule=Host(`localhost`) && PathPrefix(`/mailhog/`)
      - traefik.http.routers.mailhog.tls=true
      - traefik.http.routers.mailhog.middlewares=mailhog-prefix-stripper
      - traefik.http.middlewares.mailhog-prefix-stripper.stripprefix.prefixes=/mailhog/
      - traefik.http.services.mailhog.loadbalancer.server.port=8025

networks:
  web-external:
    driver: bridge
  # Used for PHPunit web tests:
  web-internal:
    driver: bridge
  data-internal:
    driver: bridge

volumes:
  nfsmount:
    driver: local
    driver_opts:
      type: nfs
      o: addr=host.docker.internal,rw,nolock,hard,nointr,nfsvers=3
      device: ":${PWD}"
